{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"redBorder\": a0\n});\nfunction LoginComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1, \"Please enter valid username\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1, \"Please enter correct password\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    formBuilder;\n    router;\n    http;\n    toggleLoginComponent = new EventEmitter();\n    toggleSignupComponent = new EventEmitter();\n    isLoggedIn;\n    isSignupStage = false;\n    loginForm;\n    constructor(formBuilder, router, http) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.http = http;\n    }\n    ngOnInit() {\n      // Check token validity\n      const token = this.getToken();\n      if (token) {\n        this.isLoggedIn = true;\n        this.toggleLoginComponent.emit(this.isLoggedIn);\n      } else {\n        this.isLoggedIn = false;\n      }\n      this.buildForm();\n    }\n    changeState() {\n      const url = 'https://wealtsphere.onrender.com/api/user/login';\n      const body = {\n        username: this.loginForm.get('username')?.value,\n        password: this.loginForm.get('password')?.value\n      };\n      this.http.post(url, body, {\n        withCredentials: true\n      }).subscribe(res => {\n        if (res) {\n          const token = this.setToken(res);\n          if (token) {\n            this.isLoggedIn = !this.isLoggedIn;\n            this.toggleLoginComponent.emit(this.isLoggedIn);\n          }\n        }\n      });\n    }\n    setToken(res) {\n      if (this.isLocalStorageAvailable()) {\n        const expiryTime = new Date().getTime() + res.expiresIn * 1000; // Assuming `expiresIn` is in seconds\n        localStorage.setItem('authToken', res.token);\n        localStorage.setItem('tokenExpiry', expiryTime.toString());\n        sessionStorage.setItem('userData', JSON.stringify(res.user));\n        return res.token;\n      }\n      return null;\n    }\n    getToken() {\n      if (this.isLocalStorageAvailable()) {\n        const expiryTime = localStorage.getItem('tokenExpiry');\n        if (expiryTime && parseInt(expiryTime, 10) > new Date().getTime()) {\n          return localStorage.getItem('authToken');\n        } else {\n          this.clearToken(); // Clear expired token\n        }\n      }\n      return null;\n    }\n    clearToken() {\n      if (this.isLocalStorageAvailable()) {\n        localStorage.removeItem('authToken');\n        localStorage.removeItem('tokenExpiry');\n        sessionStorage.removeItem('userData');\n      }\n    }\n    buildForm() {\n      this.loginForm = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    routeToSignUp() {\n      this.isSignupStage = !this.isSignupStage;\n      this.toggleSignupComponent.emit(this.isSignupStage);\n      // this.router.navigate([`/sign-up`]);\n    }\n    // Helper method to check if localStorage is available\n    isLocalStorageAvailable() {\n      try {\n        return typeof localStorage !== 'undefined';\n      } catch {\n        return false;\n      }\n    }\n    static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      outputs: {\n        toggleLoginComponent: \"toggleLoginComponent\",\n        toggleSignupComponent: \"toggleSignupComponent\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 22,\n      vars: 9,\n      consts: [[1, \"software\", \"row\", \"margin-auto\"], [1, \"login-container\", 3, \"formGroup\"], [1, \"login-box\"], [1, \"input-fields\"], [\"type\", \"email\", \"placeholder\", \"name@xyz.com\", \"formControlName\", \"username\", 3, \"ngClass\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"atleast 6 characters\", \"formControlName\", \"password\", 3, \"ngClass\"], [1, \"mb-3\", 3, \"click\"], [1, \"text-blue\", 3, \"click\"], [1, \"error\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n          i0.ɵɵtext(7, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 4);\n          i0.ɵɵtemplate(9, LoginComponent_span_9_Template, 2, 0, \"span\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\");\n          i0.ɵɵtext(12, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 6);\n          i0.ɵɵtemplate(14, LoginComponent_span_14_Template, 2, 0, \"span\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\")(16, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_16_listener() {\n            return ctx.changeState();\n          });\n          i0.ɵɵtext(17, \"Sign In\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"span\");\n          i0.ɵɵtext(19, \"Don't have an account? \");\n          i0.ɵɵelementStart(20, \"span\", 8);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_20_listener() {\n            return ctx.routeToSignUp();\n          });\n          i0.ɵɵtext(21, \"Sign up\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c0, ((tmp_1_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_1_0.value) == null));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.value) == null));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, CommonModule, i4.NgClass, i4.NgIf],\n      styles: [\".software[_ngcontent-%COMP%]{margin:0;padding:0;height:100vh;display:flex;align-items:center;justify-content:center;background-image:url(software-table.85771f7d4eb3ead3.jpg);background-size:cover;background-position:center;background-repeat:no-repeat;font-family:Arial,sans-serif}.login-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;height:100%;width:100%}.login-box[_ngcontent-%COMP%]{background:#ffffffe6;padding:30px 20px;border-radius:10px;box-shadow:0 4px 8px #0003;text-align:center;width:22em}.login-box[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:1.5em;color:#00786c}.text-blue[_ngcontent-%COMP%]{color:#319ee2;cursor:pointer}.redBorder[_ngcontent-%COMP%]{border:1px solid #e80001!important}.error[_ngcontent-%COMP%]{color:#e80001}.input-fields[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:10px;margin:10px 0;border:1px solid #ccc;border-radius:5px;font-size:16px}.login-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#00786c;color:#fff;border:none;padding:10px;margin-top:2em;width:100%;font-size:16px;border-radius:5px;cursor:pointer}.input-fields[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{color:#0a998b}.login-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#005c53}.input-fields[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}